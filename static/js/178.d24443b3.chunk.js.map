{"version":3,"file":"static/js/178.d24443b3.chunk.js","mappings":"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","sources":["services/api.js","components/CardsGallery/CardsGallery.styled.js","components/CardsGalleryItem/CardsGalleryItem.styled.js","components/CardsGalleryItem/CardsGalleryItem.jsx","components/CardsGallery/CardsGallery.jsx","components/BtnLoadMore/BtnLoadMore.styled.js","components/BtnLoadMore/BtnLoadMore.jsx","pages/Tweets/Tweets.styled.js","pages/Tweets/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://645640f95f9a4f23613ed358.mockapi.io/tweets`;\n\nexport async function fetchTweets(page) {\n  const searchParams = new URLSearchParams({\n    limit: 3,\n    page,\n  })\n\n  const response = await axios.get(`/followers/?${searchParams}`);\n  return await response;\n}\n\nexport async function changeFollowers(id, newAmount) {\n  const response = await axios.put(`/followers/${id}`, {followers:newAmount});\n  return await response;\n}","import styled from '@emotion/styled';\n\nexport const CardsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 15px 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport backgroundImage from 'images/picture.png';\nimport ellipse from 'images/ellipse.png';\nimport rectangle from 'images/rectangle.png';\n\nexport const Card = styled.li`\n  width: 380px;\n  background-image: url(${backgroundImage}), url(${ellipse}), url(${rectangle});\n  background-size: 308px 168px, 90px, 380px 17px;\n  background-repeat: no-repeat;\n  background-position: 36px 28px, 145px 179px, 0px 215px;\n  background-color: #471ca9;\n  box-shadow: 0px 6.87px 6.87px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n  padding: 20px 20px 36px 20px;\n\n  color: #ebd8ff;\n`;\n\nexport const Avatar = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 145.5px;\n  border-radius: 50%;\n`;\n\nexport const TweetsQuantity = styled.p`\n  text-align: center;\n  margin-top: 34.5px;\n`;\n\nexport const FollowersQuantity = styled.p`\n  text-align: center;\n  margin-top: 16px;\n`;\n\nexport const Btn = styled.button`\n  width: 196px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 26px;\n\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.23);\n  color: #373737;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Btn,\n  Card,\n  FollowersQuantity,\n  TweetsQuantity,\n} from './CardsGalleryItem.styled';\nimport LogoImg from 'images/logo.png';\nimport { changeFollowers } from 'services/api';\n\nconst CardsListItem = ({ id, avatar, alt, followers, tweets, filter }) => {\n  const [isFollow, setIsFollow] = useState(\n    localStorage.getItem(`isFollow-${id}`) === 'true' || false\n  );\n  const [followersQuantity, setFollowersQuantity] = useState(followers);\n\n  const onFollow = async () => {\n    setIsFollow(!isFollow);\n\n    const newFollowersQuantity = isFollow\n      ? followersQuantity - 1\n      : followersQuantity + 1;\n    setFollowersQuantity(newFollowersQuantity);\n    localStorage.setItem(`isFollow-${id}`, !isFollow);\n    try {\n      await changeFollowers(id, newFollowersQuantity);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      {(filter === 'all' ||\n        (filter === 'follow' && !isFollow) ||\n        (filter === 'followings' && isFollow)) && (\n        <Card>\n          <img src={LogoImg} alt=\"logo\" />\n          <Avatar src={avatar} alt={alt} width={62} height={62} />\n          <TweetsQuantity>{tweets} tweets</TweetsQuantity>\n          <FollowersQuantity>\n            {followersQuantity.toLocaleString('en-US')} Followers\n          </FollowersQuantity>\n          <Btn\n            onClick={onFollow}\n            className={!isFollow ? 'follow' : 'following'}\n          >\n            {!isFollow ? 'Follow' : 'Following'}\n          </Btn>\n        </Card>\n      )}\n    </>\n  );\n};\n\nCardsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  tweets: PropTypes.number.isRequired,\n  filter: PropTypes.string,\n};\n\nexport default CardsListItem;\n","import { CardsList } from './CardsGallery.styled';\nimport CardsGalleryItem from 'components/CardsGalleryItem/CardsGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst CardsGallery = ({ tweets, filter }) => {\n  return (\n    <CardsList>\n      {tweets &&\n        tweets.map(({ id, avatar, followers, tweets, user }) => {\n          return (\n            <CardsGalleryItem\n              key={id}\n              id={id}\n              avatar={avatar}\n              alt={user}\n              followers={followers}\n              tweets={tweets}\n              filter={filter}\n            />\n          );\n        })}\n    </CardsList>\n  );\n};\n\nCardsGallery.propTypes = {\n  tweets: PropTypes.array.isRequired,\n  filter: PropTypes.string,\n};\n\nexport default CardsGallery;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`  \n  background-color: #471ca9;  \n  margin: 15px auto 30px auto;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #7b4dde;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadMoreBtn } from './BtnLoadMore.styled';\n\nexport const BtnLoadMore = ({ onClick }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={() => onClick()}>\n      Load more\n    </LoadMoreBtn>\n  );\n};\n\nBtnLoadMore.propTypes = {\n  onClick: PropTypes.func,\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const ButtonGoBack = styled(Link)`\n  margin-left: 15px;\n  margin-top: 15px;\n  display: inline-flex;\n  justify-content: center;\n  background-color: #471ca9;\n  color: #fff;\n  padding: 10px 16px;\n  border: none;\n  font-family: inherit;\n  text-decoration: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #7b4dde;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { fetchTweets } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport CardsGallery from 'components/CardsGallery/CardsGallery';\nimport Loader from 'components/Loader/Loader';\nimport { BtnLoadMore } from 'components/BtnLoadMore/BtnLoadMore';\nimport { useLocation } from 'react-router-dom';\nimport { ButtonGoBack } from './Tweets.styled';\n\nconst Tweets = () => {\n  const [tweets, setTweets] = useState([]);\n  const [queryPage, setQueryPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getTweets = async () => {\n      try {\n        const { data } = await fetchTweets(queryPage);\n        if (queryPage === 1) {\n          setTweets(data);\n          setIsLoading(false);\n        } else {\n          setTweets(prevTweets => [...prevTweets, ...data]);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        toast.error(\n          'Sorry for the inconvenience! Please try to use our service in a few minutes!'\n        );\n      }\n    };\n    getTweets();\n  }, [queryPage]);\n\n  const handleLoadMore = async () => {\n    setQueryPage(prevState => prevState + 1);\n  };\n\n  const options = ['all', 'follow', 'followings'];\n\n  const handleFilterChange = option => {\n    setFilter(option.value);\n  };\n\n  return (\n    <>\n      <ButtonGoBack to={location.state?.from ?? '/'}>\n        <FiArrowLeft\n          style={{\n            width: '20px',\n            height: '20px',\n          }}\n        />\n        Go back\n      </ButtonGoBack>\n      <Dropdown\n        options={options}\n        onChange={handleFilterChange}\n        value={filter}\n        className=\"dropdown\"\n      />\n      <CardsGallery tweets={tweets} filter={filter} />\n      {isLoading && <Loader />}\n      {!isLoading && tweets.length > 0 && queryPage < 4 && (\n        <BtnLoadMore onClick={handleLoadMore} />\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["fetchTweets","page","searchParams","URLSearchParams","limit","axios","response","changeFollowers","id","newAmount","followers","CardsList","styled","Card","backgroundImage","Avatar","TweetsQuantity","FollowersQuantity","Btn","avatar","alt","tweets","filter","useState","localStorage","getItem","isFollow","setIsFollow","followersQuantity","setFollowersQuantity","onFollow","newFollowersQuantity","setItem","console","error","src","width","height","toLocaleString","onClick","className","map","user","CardsGalleryItem","LoadMoreBtn","BtnLoadMore","type","ButtonGoBack","Link","setTweets","queryPage","setQueryPage","isLoading","setIsLoading","setFilter","location","useLocation","useEffect","getTweets","data","prevTweets","toast","handleLoadMore","prevState","to","state","from","style","options","onChange","option","value","Loader","length"],"sourceRoot":""}